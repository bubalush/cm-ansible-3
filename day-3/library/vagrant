#!/bin/bash


source $1 
changed="false"
msg=""


# Check args exists 
if [ -z "$dest" ]; then
     printf '{"failed": true, "msg": "missing required arguments: dest"}'
      exit 0
 fi
if [ -z "$st" ]; then
       printf '{"failed": true, "msg": "missing required arguments: state"}'
      exit 0
fi

# Check Vagrantfile exists 
if [ ! -f "$dest/Vagrantfile" ]; then
		msg="Vagrantfile doesn't exists"
		printf '{"failed": true, "msg": "%s"}' "$msg"
		exit 0
fi

status_vm=$(vagrant status 2>/dev/null | awk 'NR == 3 {print $2,$3}' |  sed -e 's/\(.*\) (virtualbox)/\1/g')

# Function get info about VM

function get_info
	{
		
		ip_addr=$(vagrant ssh-config| awk 'NR == 2 {print $2}')
		port=$(vagrant ssh-config | awk 'NR == 4 {print $2}')
		key=$(vagrant ssh-config | awk 'NR == 8 {print $2}')
		user=$(vagrant ssh-config | awk 'NR == 3 {print $2}')
		OS_name=$(vagrant ssh -c 'cat /etc/*-release| head -n 1')
		RAM=$(vagrant ssh -c 'free -m' | awk 'NR == 2 {print $2;}')

	}

# Function vagrant up

function run_vm
	{
	  
		if [ $status_vm == "running" ]; then
			get_info
			changed="false"
			state="$status_vm"
			msg="VM's state wasn't changed"
		else
			cd $dest
			vagrant up 2>/dev/null
			status_vm=$(vagrant status 2>/dev/null | awk 'NR == 3 {print $2,$3}' |  sed -e 's/\(.*\) (virtualbox)/\1/g')
			
			if [ $status_vm == "running" ]; then 
				get_info
				state="$status_vm"
			    changed="true"
			    msg="VM started"
			else
			    printf '{"failed": true, "msg": "Fail create VM"}'
				exit 0
		    fi
		fi
	}

# Function vagrant halt

function stop_vm
	{

		if [ $status_vm == "poweroff" ] || [[ $status_vm == "not created" ]] ; then
			changed="false"
			state="$status_vm"
			msg="VM's state wasn't changed"
		else
			cd $dest
			vagrant halt -f 2>/dev/null
			status_vm=$(vagrant status 2>/dev/null | awk 'NR == 3 {print $2,$3}' |  sed -e 's/\(.*\) (virtualbox)/\1/g')
			state="$status_vm"
			changed="true"
			msg="VM stopped"
			
		fi
	}

	
# Function vagrant destroy

function delete_vm
	{
		
		if [[ $status_vm == "not created" ]]; then
			changed="false"
			state="$status_vm"
			msg="VM's state wasn't changed"
		else
			cd $dest
			vagrant destroy -f 2>/dev/null
			status_vm=$(vagrant status | awk 'NR == 3 {print $2,$3}' |  sed -e 's/\(.*\) (virtualbox)/\1/g')
			state="$status_vm"
			changed="true"
			msg="VM destroyed"
		fi
	}	

case $st in
      running)
         run_vm
          ;;
      stopped)
         stop_vm
        ;;
      destroyed)
         delete_vm
         ;;
        *)
  			printf '{"failed": true, "msg": "invalid state: %s"}' "$st"
      		exit 1
      	 ;;

esac

printf '{"changed": %s, "failed": false, "msg": "%s", "state": "%s", "ip_addr": "%s", "port": "%s", "key": "%s", "user": "%s", "RAM": "%s", "OS_name":"%s"}' "$changed" "$msg" "$state" "$ip_addr" "$port" "$key" "$user" "$RAM" "$OS_name"
exit 0
